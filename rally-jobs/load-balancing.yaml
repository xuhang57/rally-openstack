---
  version: 2
  title: Task for rally-task-load-balancing job
  description: >
    This task contains various scenarios for testing load balancing
  subtasks:
    -
      title: Test Legacy lbaas neutron extension
      scenario:
        NeutronLoadbalancerV2.create_and_list_loadbalancers:
          lb_create_args: {}
      runner:
        constant:
          times: 2
          concurrency: 2
      contexts:
        users:
          tenants: 2
        network: {}
      sla:
        failure_rate:
          max: 0
    -
      title: Octavia.create_and_list_loadbalancers
      workloads:
      -
        scenario:
          Octavia.create_and_list_loadbalancers: {}
        runner:
          constant:
            times: 2
            concurrency: 2
        contexts:
          users:
            tenants: 2
          roles: ["load-balancer_member"]
          network: {}
        sla:
          failure_rate:
            max: 0
    -
      title: Octavia.create_and_delete_loadbalancers
      workloads:
      -
        scenario:
          Octavia.create_and_delete_loadbalancers: {}
        runner:
          constant:
            times: 2
            concurrency: 2
        contexts:
          users:
            tenants: 2
          roles: ["load-balancer_member"]
          network: {}
        sla:
          failure_rate:
            max: 0
    -
      title: Octavia.create_and_update_loadbalanacers
      workloads:
      -
        scenario:
          Octavia.create_and_update_loadbalancers:
              load_balancer_update_args: {}
        runner:
          constant:
            times: 2
            concurrency: 2
        contexts:
          users:
            tenants: 2
          roles: ["load-balancer_member"]
          network: {}
        sla:
          failure_rate:
            max: 0
    -
      title: Octavia.create_and_stats_loadbalanacers
      workloads:
      -
        scenario:
          Octavia.create_and_stats_loadbalancers: {}
        runner:
          constant:
            times: 2
            concurrency: 2
        contexts:
          users:
            tenants: 2
          roles: ["load-balancer_member"]
          network: {}
        sla:
          failure_rate:
            max: 0
    -
      title: Octavia.create_and_show_loadbalanacers
      workloads:
      -
        scenario:
          Octavia.create_and_show_loadbalancers: {}
        runner:
          constant:
            times: 2
            concurrency: 2
        contexts:
          users:
            tenants: 2
          roles: ["load-balancer_member"]
          network: {}
        sla:
          failure_rate:
            max: 0
    -
      title: Octavia.create_and_list_pools
      workloads:
      -
        scenario:
          Octavia.create_and_list_pools:
              pool_create_args: {}
        runner:
          constant:
            times: 2
            concurrency: 2
        contexts:
          users:
            tenants: 2
          roles: ["load-balancer_member"]
          network: {}
        sla:
          failure_rate:
            max: 0
    -
      title: Octavia.create_and_delete_pools
      workloads:
      -
        scenario:
          Octavia.create_and_delete_pools:
              pool_create_args: {}
        runner:
          constant:
            times: 2
            concurrency: 2
        contexts:
          users:
            tenants: 2
          roles: ["load-balancer_member"]
          network: {}
        sla:
          failure_rate:
            max: 0
    -
      title: Octavia.create_and_update_pools
      workloads:
      -
        scenario:
          Octavia.create_and_update_pools:
              pool_update_args: {}
              pool_create_args: {}
        runner:
          constant:
            times: 2
            concurrency: 2
        contexts:
          users:
            tenants: 2
          roles: ["load-balancer_member"]
          network: {}
        sla:
          failure_rate:
            max: 0
    -
      title: Octavia.create_and_show_pools
      workloads:
      -
        scenario:
          Octavia.create_and_show_pools:
              pool_create_args: {}
        runner:
          constant:
            times: 2
            concurrency: 2
        contexts:
          users:
            tenants: 2
          roles: ["load-balancer_member"]
          network: {}
        sla:
          failure_rate:
            max: 0
